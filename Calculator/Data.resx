<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnBackSpaceDAT.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAbZJREFUWEft
        lblKQ0EUhuOCIlEUjGLEwspGcGmCxgViIQqmVqxcYuEDaAptNJUg2OsjuPQiiNhGEN/DRnApLOL3wxHR
        zL1RmKjF/eFjMuc/nDm5M3duLFKkSP9WpVJpFG6qwDXM2TJukZCAIiQt5E3UjMOdTcuFWQfnMGLzbZiE
        CfvdBTlYg06Lfdu3mkWNTmEWYANUaN7CXkS9hI3uBjBm4QSaoB9azfIi6q3aWN4AwV4Z0AYdkDLLm6jp
        boBAA1zBIHRDzqxAkbMEezbVPAWn0GihMuG5t4DAAayD9n3FwqEibxju4RCm4BEKZjuFn7fxowEmWTiG
        FhiDwH/wVeQOwQO8QujiEjnvb9anBhZAB08NDEDcrIoiNwMv8Ax6ErVmOYWftrFsC/ZhE3pg0cKhIk+P
        /Ql2QE9C23EEgU3gue8BAvVwCbow1ETFc0COv0MoEdQBvIUk6AbLmOVN1Ay+ByQtChfQDH3QbpYXUS+8
        AQlzC3ZBT2Lawl5EvfCrWMKsgTOYsXkexkGvqH5rq7T/y6Ct+pFvNYMbkEjQVaxv9+9/jt9FUhp0HqpB
        1paJFCnSXysWewMBmO6mrVnPggAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="btnControl.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAADxJREFUWEft
        0yEOAEAQwkD+/+k7U4skWdHRJFVE0jlvjEzHboaMpI63zJDp2M2QkdTxlhkyHbsZMpKuSD77Lj3fujth
        aQAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD/AP8B/yXCYP8jw4P/JMR4/yHFHwAAAAAAAAAAAAAAAAAAAAD/KbI4/yuziv8rsoj/K7KI/yuyiP8r
        tIj/K7SI/yu0tP8rsjUAAAAA/yuqBv8rtZD/K7gSAAAAAAAAAAD/MqQ4/zKlrP8xo4j/MaOI/zGjiP8x
        pYj/MaWI/zGliP8wpY7/t74n/7W8qP+2u17/Maca/zCnZQAAAAAAAAAA/ziVgAAAAAD/OJWA/ziXQP84
        l0AAAAAAAAAAAAAAAAD/OJaF/6qABv///wH/v5FY/4uTQv83lmYAAAAAAAAAAP89hjv/Poes/z6HiP8+
        h4j/PoeI/z6HiP8+h4j/PoeI/z6Iuv8/hzUAAAAA/yuABv89iJL/PYYVAAAAAAAAAAD/RHc8/0V4rv9F
        eIj/RHiI/0R4iP9EeIj/RHqI/0R6iP9FeYn/Q3rB/0V5uv9EeoT/R3gkAAAAAAAAAAAAAAAA/0xqgAAA
        AAD/TGqA/0xoQP9MaEAAAAAAAAAAAAAAAAD/SmqA/0xsQP9KaoAAAAAAAAAAAAAAAAAAAAAAAAAAAP9S
        Wzv/Ulqs/1FaiP9RXIj/UVyI/1FciP9RXIj/UVyI/1FciP9RXIj/UVyjAAAAAAAAAAAAAAAAAAAAAAAA
        AAD/WU08/1hLrv9YTYj/WE2I/1ZNiP9WTYj/Vk2I/1ZNiP9WTYj/Vk2I/1hNpgAAAAAAAAAAAAAAAAAA
        AAAAAAAA/14+gAAAAAD/Xj6A/2A8QP9gPEAAAAAAAAAAAAAAAAD/Xj6A/1xAQP9ePoAAAAAAAAAAAAAA
        AAAAAAAAAAAAAP9jLzb/ZC6m/2MviP9jL4j/Yy+I/2MviP9jL4j/Yy+I/2MviP9lL6L/Yy9+AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/20hNv9rH4z/ayCI/2sgiP9rIIj/ayCI/2sgiP9rIIj/aSB+AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAD//wAA/+8AAOA7AADALwAAr78AAMA7AADABwAAr68AAMAP
        AADADwAAr68AAMAfAADgPwAA//8AAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP9NZf8AAAAAAAAAAP9MZoD/TGaAAAAAAP9M
        ZoD/TGaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP9MZoD/TGaA/0xogAAAAAAAAAAA/0xn/wAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/1Be1v9QXo3/T153/09ed/9P
        Xnf/T153/09ed/9PXnf/T153/09ed/9PXnf/T153/09ed/9PXnf/T153/09ed/9PXnf/T153/09ed/9P
        X47/T1/eAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/UFgg/1NX//9T
        Voj/U1aI/1NWiP9TVoj/U1aI/1NWiP9TVoj/U1aI/1NWiP9TVoj/U1aI/1NWiP9TWIj/U1iI/1NYiP9T
        WIj/U1iI/1JY//9QWCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP9Y
        UCD/Vk///1ZPd/9WT3f/Vk93/1ZPd/9WT3f/Vk93/1ZPd/9WT3f/Vk93/1ZPd/9WT3f/Vk93/1ZPd/9W
        T3f/Vk93/1ZPd/9WT3f/VVH//1hQIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA/1lI2P9ZSJX/WEeI/1hHiP9YR4j/WEeI/1hHiP9YR4j/WEeI/1hHiP9YR4j/WEmI/1hJiP9Y
        SYj/WEmI/1hJiP9YSYj/WEmI/1hJiP9ZSpX/WUncAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD/XED/AAAAAAAAAAD/XEKA/1xCgAAAAAD/XEKA/1xCgAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD/XEKA/1xCgP9cQoAAAAAAAAAAAP9cQv8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP9gOf8AAAAAAAAAAP9gOoD/YDqAAAAAAP9gOoD/YDqAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP9gOoD/YDqA/2A6gAAAAAAAAAAA/186/wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/2My2v9jM43/YzF3/2Mxd/9jMXf/YzF3/2Mxd/9j
        MXf/YzF3/2Mxd/9jMXf/YzF3/2Mxd/9jM3f/YzN3/2Mzd/9jM3f/YzN3/2Mzd/9jMo7/YjPYAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/ZCch/2cpfP9mKv//ZSmI/2UpiP9l
        K4j/ZSuI/2UriP9lK4j/ZSuI/2UriP9lK4j/ZSuI/2UriP9lK4j/ZSuI/2UriP9lK4j/ZSz//2UrfP9k
        LiEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/2kj2v9p
        Io3/aSJ3/2kid/9pInf/aSJ3/2kid/9pJHf/aSR3/2kkd/9pJHf/aSR3/2kkd/9pJHf/aSR3/2gkjv9p
        I9gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD/bB8h/20dfP9tHIj/bRyI/20ciP9tHIj/bRyI/20ciP9tHIj/bRyI/20ciP9tHIj/bRyI/20ciP9t
        HIj/bR18/2wfIQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP/////////////////////////////wH///58/4AA/v+//c9+AA
        GXfsn9+37J/f9+f/z+/wAAfP9//wH+AAAP/sn8b/7J/G/+f//P/wAAH/9//9/+AAAP/sn8b/7J/G/+f/
        /P/4AAP/+f/z//4AD///////////////////////
</value>
  </data>
</root>